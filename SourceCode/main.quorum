use Libraries.Game.Game
use Libraries.Game.Graphics.Camera
use Libraries.Game.Graphics.Model
use Libraries.Game.Graphics.Color
use Libraries.Compute.Vector3
use Libraries.Game.Graphics.AmbientLight
use Libraries.Game.Graphics.PointLight
use Libraries.Game.Graphics.DirectionalLight
use Libraries.Game.Audio3D
use Libraries.Game.Graphics.Drawable
use Libraries.Game.Graphics.Camera
use Libraries.Game.Layer2D
use Libraries.Game.Graphics.PerspectiveCamera
use Libraries.Interface.Events.KeyboardListener
use Libraries.Interface.Events.KeyboardEvent
use Libraries.Compute.Random


class Main is Game, KeyboardListener
    PerspectiveCamera camera = undefined
    Model ground
   
    Model rock1
    Model rock2
    Model rock3
    Model rock4
    Model rock5
    Model rock6
    Model rock7
    Model rock8
    Model rock9
    Model rock10
    Model head

    Model diver
    
    
    Drawable grass
    Drawable background
    Drawable rockPicture
    Drawable helmet

    Random ran

    PokemonGoer pokemonGoer1
    PokemonGoer pokemonGoer2

    TargetKo ko

    // The speed of the character when he moves
    number speed = 30

    // These are the values that we will use to move the character
    number velocityX = 0
    number velocityY= 0
    number velocityZ = 0
      
   
    action Main
        StartGame()
    end

   
    action CreateGame
        
        

        AmbientLight ambient
        ambient:SetColor(0.3, 0.3, 0.3, 1)
        SetAmbientLight(ambient)

        DirectionalLight light
        light:SetColor(0, 0.3, 0.4, 1)
        light:SetDirection(0.2, -0.8, 0.8)
        Add(light)

        PointLight pointLight

        camera = cast(PerspectiveCamera,GetCamera3D())
        camera:SetPosition(0, 40, -550)
        camera:LookAt(0, 2, 0) 
        camera:SetUp(0,1,0)

        Layer2D layer
        AddLayer(0, layer)
        background:Load("OceanBottom.png")
        layer:Add(background)

        grass:Load("GrassField1.jpg")
        ground:LoadBox(1000, 2, 1000, grass)
        Add(ground)
        
        diver:Load("man.g3db") // load the g3db model
        diver:Scale(0.008, 0.008, 0.008)
        diver:SetPosition(0, 10, -500)
        diver:Rotate(0, 1, 0, 90)
        Add(diver)

        helmet:Load("diving-helmet.jpg")					
        head:LoadSphere(3, 3, 3, helmet)
        head:Rotate(0, 1, 0, 90)
        head:SetPosition(0, 5, 0)
        diver:Add(head)

        
        pointLight:SetColor(1, 1, 1, 1)
        pointLight:SetPosition(0, 3, 0)
        pointLight:SetIntensity(20)
        diver:Add(pointLight)

        rockPicture:Load("Rock1.png")
        rock1:LoadBox(20, 20, 20, rockPicture)
        rock1:SetPosition(-150, 10, -300)
        Add(rock1)
        
        rockPicture:Load("Rock1.png")
        rock2:LoadBox(20, 20, 20, rockPicture)
        rock2:SetPosition(150, 10, -300)
        Add(rock2)

        rockPicture:Load("Rock1.png")
        rock3:LoadBox(20, 20, 20, rockPicture)
        rock3:SetPosition(-10, 10, -400)
        Add(rock3)

        rockPicture:Load("Rock1.png")
        rock4:LoadBox(20, 20, 20, rockPicture)
        rock4:SetPosition(-80, 10, -300)
        Add(rock4)

        rockPicture:Load("Rock1.png")
        rock5:LoadBox(20, 20, 20, rockPicture)
        rock5:SetPosition(-150, 10, -200)
        Add(rock5)

        rockPicture:Load("Rock1.png")
        rock6:LoadBox(20, 20, 20, rockPicture)
        rock6:SetPosition(10, 10, -450)
        Add(rock6)

        rockPicture:Load("Rock1.png")
        rock7:LoadBox(20, 20, 20, rockPicture)
        rock7:SetPosition(40, 10, -150)
        Add(rock7)
        
        rockPicture:Load("Rock1.png")
        rock8:LoadBox(20, 20, 20, rockPicture)
        rock8:SetPosition(-110, 10, -50)
        Add(rock8)

        rockPicture:Load("Rock1.png")
        rock9:LoadBox(20, 20, 20, rockPicture)
        rock9:SetPosition(50, 10, 200)
        Add(rock9)

        rockPicture:Load("Rock1.png")
        rock10:LoadBox(20, 20, 20, rockPicture)
        rock10:SetPosition(-100, 10, 250)
        Add(rock10)
        
        Color wallColor // todo: load this up with a meaningful color
        wallColor = wallColor:Yellow()
        Wall leftWall1
        leftWall1:LoadWall(50, 100, 200, wallColor) // fill in a height, width, and depth
        leftWall1:SetPosition(10, 2, 20) // fill in a x, y,and z
        Wall rightWall1
        rightWall1:LoadWall(50, 100, 200, wallColor) // fill in a height, width, and depth
        rightWall1:SetPosition(120, 2, 20) // fill in a x, y,and z
        
        Crab crab1
        crab1:LoadCrab(10, 10, 20, leftWall1, rightWall1) // fill in a width, height, and depth (no need to provide position b/c magic!)

        Add(leftWall1)
        Add(rightWall1)
        Add(crab1)

        pokemonGoer1:CreateCharacter()
        pokemonGoer1:SetPosition(-40, 10, -410)
        Add(pokemonGoer1)
        
        pokemonGoer2:CreateCharacter("pokemonGoer1.png")
        pokemonGoer2:SetPosition(-65, 10, -430)
        Add(pokemonGoer2)

        ko:LoadKo()
        Add(ko)

        // Add a keyboardListener to move the character
        AddKeyboardListener(me)

    end

    
    action Update(number seconds)

     // Moves the character every update depending on the values of the 3 fields
        diver:Move(velocityX*seconds, velocityY*seconds, velocityZ*seconds)

        // Moves the camera according to the character position
       // camera:SetPosition(diver:GetPosition():GetX()-4,diver:GetPosition():GetY()+3,diver:GetPosition():GetZ())
       //first person //camera:SetPosition(diver:GetPosition():GetX()-5,diver:GetPosition():GetY(),diver:GetPosition():GetZ())
       camera:SetPosition(diver:GetPosition():GetX(),diver:GetPosition():GetY()+5,diver:GetPosition():GetZ()-10)


    end
    
    action PressedKey(KeyboardEvent e)
        if e:keyCode = e:UP
            MoveForward()
        elseif e:keyCode = e:LEFT
            MoveLeft()
        elseif e:keyCode = e:RIGHT
            MoveRight()
        elseif e:keyCode = e:DOWN
            MoveBack()
        end
    end

    action ReleasedKey(KeyboardEvent e)
        StopCharacter()
    end

    action MoveForward() 
        velocityX = 0
        velocityY = 0
        velocityZ = speed
    end

    action StopCharacter()
        velocityX = 0      
        velocityY = 0
        velocityZ = 0
    end

    action MoveLeft
        velocityX = -speed
        velocityY = 0
        velocityZ = 0 
    end 

    action MoveRight
        velocityX = speed
        velocityY = 0
        velocityZ = 0 
    end 

    action MoveBack
        velocityX = 0
        velocityY = 0
        velocityZ = -speed 
    end


end
