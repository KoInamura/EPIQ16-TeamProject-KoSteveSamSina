use Libraries.Game.Graphics.Model
use Libraries.Game.Graphics.Color
use Libraries.Compute.Vector3
use Libraries.Game.Graphics.PointLight
use Libraries.Game.Audio3D
use Libraries.Game.Graphics.Drawable
use Libraries.Compute.Random

class Crab is Model 
Model model
Audio3D audio

    action LoadWall(number width, number height, number depth)
//Drawable wall
//        wall:Load("crab.png")
        model = LoadBox(width, height, depth) // if we texture the wall, we can uncomment the top two lines and add in a ", wall" into the LoadBox action
        SetDescription("Wall")
        Add(model)

        audio:Load("wall.wav")
        audio:EnableLooping()
        audio:Play()
        Add(audio)
    end

action GetLeftEdge() returns number
return GetGlobalPositionX()-(GetWidth()/2.0)
end

action GetRightEdge() returns number
return GetGlobalPositionX()+(GetWidth()/2.0)
end

action GetTopEdge() returns number
return GetGlobalPositionY()+(GetHeight()/2.0)
end

action GetFrontEdge() returns number
return GetGlobalPositionZ()-(GetDepth()/2.0)
end

action GetBackEdge() returns number
return GetGlobalPositionZ()+(GetDepth()/2.0)
end

    action Update(number seconds)
         
    end
end
